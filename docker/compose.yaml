version: '3.4'

volumes:
  tochka_test_pg_data:
  tochka_test_redis_data:

networks:
  tochka_test_back_net:
  tochka_test_front_net:

x-app-core: &app-core
  build:
    context: ..
    dockerfile: ./docker/app_dockerfile
  depends_on:
    - redis
    - postgres

x-app-env: &app-env
  FLASK_APP: app.wsgi
  DB_PASSWORD: ${DB_PASSWORD}
  APP_SECRET_KEY: ${APP_SECRET_KEY}

x-all-net: &all-net
  networks:
    - tochka_test_back_net
    - tochka_test_front_net

x-back-net: &back-net
  networks:
    - tochka_test_back_net

x-restart-policy: &restart-policy
  restart: on-failure:3

services:
  nginx:
    <<: *restart-policy
    <<: *all-net
    container_name: tochka_test_nginx
    image: nginx:1.17.5-alpine
    ports:
      - ${PORT}:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app

  app:
    <<: *app-core
    <<: *restart-policy
    <<: *back-net
    container_name: tochka_test_app
    expose:
      - 80
    environment:
      <<: *app-env
    command: ['wait-for-it', '-s', 'postgres:5432', '--', 'invoke', 'docker-up']

  redis:
    <<: *restart-policy
    <<: *back-net
    container_name: tochka_test_redis
    image: redis:5.0.6-alpine
    restart: always
    volumes:
      - tochka_test_redis_data:/data

  postgres:
    <<: *restart-policy
    <<: *back-net
    container_name: tochka_test_postgres
    image: postgres:12.0-alpine
    restart: always
    volumes:
      - tochka_test_pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  huey_worker:
    <<: *app-core
    <<: *restart-policy
    <<: *back-net
    container_name: tochka_test_huey_worker
    restart: always
    environment:
      <<: *app-env
      HUEY_WORKERS: 1
      SUBSTRACT_HOLD_PERIOD: 10
    command: ['wait-for-it', '-s', 'postgres:5432', '--', 'python3', '-m', 'app.message_queue']
